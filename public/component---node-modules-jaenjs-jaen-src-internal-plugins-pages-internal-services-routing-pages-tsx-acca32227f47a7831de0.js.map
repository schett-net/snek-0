{"version":3,"file":"component---node-modules-jaenjs-jaen-src-internal-plugins-pages-internal-services-routing-pages-tsx-acca32227f47a7831de0.js","mappings":"gSAgFA,GAAeA,EAAAA,EAAAA,KAxEC,SAACC,GAAoD,QAC7DC,GAAeC,EAAAA,EAAAA,KACnB,SAAAC,GAAK,OAAIA,EAAMC,SAASC,QAAQJ,YAA3B,IAGDK,EAAI,UAAGN,EAAMO,gBAAT,iBAAG,EAAgBC,YAAnB,aAAG,EAAsBC,UAAU,GAE7C,GAAsB,oBAAXC,OACT,OAAO,mCAGT,IAAKJ,EACH,MAAM,IAAIK,MAAM,uDAGlB,MAA+BC,EAAAA,SAAc,kBAAMX,EAAaK,EAAnB,GAA0B,CAACA,IAAjEO,EAAP,EAAOA,OAAQC,EAAf,EAAeA,aAERC,GAAkBC,EAAAA,EAAAA,kBAAlBD,eAEPH,EAAAA,WAAgB,WAId,KAAMN,KAAQL,GAAe,CAC3B,IAAMgB,EAAUC,OAAOC,KAAKlB,GAAcmB,MACxC,SAAAd,GAAI,aAAI,UAAAL,EAAaK,UAAb,eAAoBO,UAAWA,CAAnC,IAGFI,GAEFI,EAAAA,EAAAA,UAAS,MAAMJ,IAGfI,EAAAA,EAAAA,UAAS,IAEZ,CACF,GAAE,CAACpB,IAEJ,ICrCAqB,EACAC,EAEA,EAAOpB,EAAOqB,EDkCRC,GACJ,QAAC,KAAD,WACE,QAAC,KAAD,CAAkBC,iBAAe,EAACC,MAAM,gBAItCC,GAAYC,EAAAA,EAAAA,oBAIZC,EAAWF,EACbA,EAAUR,MAAK,SAAAW,GAAC,OAAIA,EAAEC,OAASlB,CAAf,IAChB,KAEUmB,GCnDdX,GDmD2C,iBAAC,kFACtCQ,EADsC,gCAG3Bf,EAAeD,GAHY,mFClD5CS,EDuDG,CAACO,GCrDJ,EAA0BlB,EAAAA,SAAgC,CACxDsB,OAAQ,OACRC,MAAO,KACPC,MAAO,OAHFjC,EAAP,KAAcqB,EAAd,KAMAZ,EAAAA,WAAgB,WACdU,IACGe,MAAK,SAAAF,GAAK,OAAIX,EAAS,CAACU,OAAQ,YAAaC,MAAAA,EAAOC,MAAO,MAAjD,IACVE,OAAM,SAAAF,GAAK,OAAIZ,EAAS,CAACU,OAAQ,WAAYC,MAAO,KAAMC,MAAAA,GAA/C,GACf,GAAEb,GAOIpB,GD+BAgC,MAOP,OAAKF,GAKH,QAACA,EAAD,iBACOjC,EADP,CAEEuC,YAAW,iBAAMvC,EAAMuC,YAAZ,CAAyBC,WAAY3B,IAChD4B,KAAI,iBAAMzC,EAAMyC,KAAZ,CAAkBC,SAAU,UAP3BjB,CAUV,IE/DD,EAZU,WACR,MAAsB,oBAAXf,QAEP,QAAC,EAAAiC,OAAD,CAAQC,SAAS,EAAjB,UACE,QAAC,EAAD,CAAStC,KAAK,SAKb,IACR,C","sources":["webpack://auth-manager/./node_modules/@jaenjs/jaen/src/internal-plugins/pages/internal/services/routing/pages/dynamic.tsx","webpack://auth-manager/./node_modules/@jaenjs/jaen/src/utils/hooks/usePromiseEffect.tsx","webpack://auth-manager/./node_modules/@jaenjs/jaen/src/internal-plugins/pages/internal/services/routing/pages/_.tsx"],"sourcesContent":["import {Center, CircularProgress} from '@chakra-ui/react'\nimport {useAppSelector, withRedux} from '../../../redux'\nimport {useJaenTemplates, useSiteContext} from '../../../services/site'\nimport {usePromiseEffect} from '../../../../../../utils/hooks/usePromiseEffect'\nimport {RouteComponentProps} from '@reach/router'\nimport {navigate, PageProps} from 'gatsby'\nimport * as React from 'react'\n\nconst Dynamic = (props: RouteComponentProps & Partial<PageProps>) => {\n  const dynamicPaths = useAppSelector(\n    state => state.internal.routing.dynamicPaths\n  )\n\n  const path = props.location?.hash?.substring(1)\n\n  if (typeof window === 'undefined') {\n    return <>dynamic</>\n  }\n\n  if (!path) {\n    throw new Error('Something went wrong while preparing a dynamic page')\n  }\n\n  const {pageId, templateName} = React.useMemo(() => dynamicPaths[path], [path])\n\n  const {templateLoader} = useSiteContext()\n\n  React.useEffect(() => {\n    // We can determine if a page has been moved by checking if the path is no longer in the dynamicPaths, if so\n    // we search for the the new path in the dynamicPaths by pageId and redirect to it.\n\n    if (!(path in dynamicPaths)) {\n      const newPath = Object.keys(dynamicPaths).find(\n        path => dynamicPaths[path]?.pageId === pageId\n      )\n\n      if (newPath) {\n        // Page has been moved, update to the new path\n        navigate(`/_#${newPath}`)\n      } else {\n        // Page has been deleted, redirect to the parent page\n        navigate('/')\n      }\n    }\n  }, [dynamicPaths])\n\n  const loadingComponent = (\n    <Center>\n      <CircularProgress isIndeterminate color=\"green.300\" />\n    </Center>\n  )\n\n  const templates = useJaenTemplates()\n\n  // We need to wait for the template to be loaded before we can render the page,\n  // so template null means the template is not loaded yet\n  const template = templates\n    ? templates.find(t => t.name === templateName)\n    : null\n\n  const {value: Component} = usePromiseEffect(async () => {\n    if (template) {\n      // TODO: Remove this hack to ignore incorrect template names\n      return await templateLoader(templateName)\n    }\n  }, [template])\n\n  if (!Component) {\n    return loadingComponent\n  }\n\n  return (\n    <Component\n      {...(props as any)}\n      pageContext={{...props.pageContext, jaenPageId: pageId}}\n      data={{...props.data, jaenPage: null}}\n    />\n  )\n}\n\nexport default withRedux(Dynamic)\n","import * as React from 'react'\nimport {DependencyList} from 'react'\n\ntype PromiseState<T> =\n  | {status: 'idle' | 'pending'; value: null; error: null}\n  | {status: 'fulfilled'; value: T; error: null}\n  | {status: 'rejected'; value: null; error: Error}\n\nexport function usePromiseEffect<T>(\n  effect: () => Promise<T>,\n  deps: DependencyList\n) {\n  const [state, setState] = React.useState<PromiseState<T>>({\n    status: 'idle',\n    value: null,\n    error: null\n  })\n\n  React.useEffect(() => {\n    effect()\n      .then(value => setState({status: 'fulfilled', value, error: null}))\n      .catch(error => setState({status: 'rejected', value: null, error}))\n  }, deps)\n\n  // chose the shape you prefer for the return type,\n  // here are some examples:\n  // return [state.value, state.status === 'pending', state.error]\n  // return [state.value, state.status, state.error]\n\n  return state\n}\n","import {Router} from '@reach/router'\nimport Dynamic from './dynamic'\n\nconst _ = () => {\n  if (typeof window !== 'undefined') {\n    return (\n      <Router primary={false}>\n        <Dynamic path=\"/_\" />\n      </Router>\n    )\n  }\n\n  return null\n}\n\nexport default _\n"],"names":["withRedux","props","dynamicPaths","useAppSelector","state","internal","routing","path","location","hash","substring","window","Error","React","pageId","templateName","templateLoader","useSiteContext","newPath","Object","keys","find","navigate","effect","deps","setState","loadingComponent","isIndeterminate","color","templates","useJaenTemplates","template","t","name","Component","status","value","error","then","catch","pageContext","jaenPageId","data","jaenPage","Router","primary"],"sourceRoot":""}